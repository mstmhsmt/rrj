
DEFINE input:inference "ont.cpi"

PREFIX fb:   <http://codinuum.com/fb/>
PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


SELECT DISTINCT ?param ?param_ ?v ?v_
(?v AS ?originalVariable)
(?v_ AS ?modifiedVariable)
(?pname AS ?originalParameterName)
(?pname_ AS ?modifiedParameterName)
(?param AS ?originalParameter)
(?param_ AS ?modifiedParameter)
(?cname AS ?className)
(?mname AS ?methodName)
(?meth AS ?originalMethod)
(?meth_ AS ?modifiedMethod)
(?class AS ?originalClass)
(CONCAT(?className,".",?methodName) AS ?GROUP)
WHERE {

  {
    SELECT DISTINCT ?param ?pname ?meth ?param_ ?pname_ ?meth_ ?mname ?mname_ ?class ?class_
    WHERE {

      {
        SELECT DISTINCT ?param ?pname ?meth ?param_ ?pname_ ?meth_
        WHERE {

          ?param a java:Parameter ;
                 java:name ?pname ;
                 java:inMethodOrConstructor ?meth ;
                 chg:relabeled ?param_ .

          ?param_ a java:Parameter ;
                  java:name ?pname_ ;
                  java:inMethodOrConstructor ?meth_ .

        } GROUP BY ?param ?pname ?meth ?param_ ?pname_ ?meth_
      }

      ?meth a java:MethodOrConstructor ;
            java:name ?mname ;
            java:inTypeDeclaration ?class .

      ?meth_ a java:MethodOrConstructor ;
             java:name ?mname_ ;
             java:inTypeDeclaration ?class_ .

    } GROUP BY ?param ?pname ?meth ?param_ ?pname_ ?meth_ ?mname ?mname_ ?class ?class_
  }

  FILTER (EXISTS {
    ?meth chg:mappedTo ?meth_ .
  } || EXISTS {
    [] a java:MethodBody ;
       src:parent ?meth ;
       chg:mappedTo [ a java:MethodBody ;
                      src:parent ?meth_ ] .
  })

  ?class a java:TypeDeclaration ;
         java:name ?cname .

  OPTIONAL {
    ?v java:declaredBy ?param ;
       java:name ?pname ;
       chg:mappedTo ?v_ .
    ?v_ java:declaredBy ?param_ ;
        java:name ?pname_ .
  }

  # FILTER (EXISTS {
  #   ?v java:declaredBy ?param ;
  #      java:name ?pname ;
  #      chg:mappedTo ?v_ .
  #   ?v_ java:declaredBy ?param_ ;
  #       java:name ?pname_ .
  # } || EXISTS {
  #   ?class a java:InterfaceDeclaration .
  # } || NOT EXISTS {
  #   ?v java:declaredBy ?param .
  #   ?v_ java:declaredBy ?param_ .
  # })

}
