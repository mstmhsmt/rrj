
DEFINE input:inference "ont.cpi"

PREFIX fb:   <http://codinuum.com/fb/>
PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


SELECT DISTINCT ?ty ?ty_ ?v ?v_
(?ty AS ?originalType)
(?ty_ AS ?modifiedType)
(?tyname AS ?originalTypeName)
(?tyname_ AS ?modifiedTypeName)
(?dims AS ?originalTypeDims)
(?dims_ AS ?modifiedTypeDims)
(?v AS ?originalVariable)
(?v_ AS ?modifiedVariable)
(?vname AS ?originalVariableName)
(?vname_ AS ?modifiedVariableName)
(?cname AS ?className)
(?mname AS ?methodName)
(?meth AS ?originalMethod)
(?meth_ AS ?modifiedMethod)
(?class AS ?originalClass)
(CONCAT(?className,".",?methodName) AS ?GROUP)
WHERE {

  {
    SELECT DISTINCT ?dtor ?dtor_ ?vname ?meth ?ty ?ty_ ?vname_ ?meth_ ?v ?v_ ?mname ?mname_
                    ?class ?class_
    WHERE {
      {
        SELECT DISTINCT ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_ ?v ?v_
        WHERE {
          {
            SELECT DISTINCT ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_
            WHERE {
              {
                SELECT DISTINCT ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_
                WHERE {
                  {
                    SELECT DISTINCT ?dtor ?vname ?ty
                    WHERE {
                      {
                        ?for a java:EnhancedForStatement ;
                             src:child0 ?dtor .

                        ?dtor a java:ForHeader ;
                              src:child1 ?ty ;
                              java:name ?vname .
                      }
                      UNION
                      {
                        ?dtor a java:VariableDeclarator ;
                              java:name ?vname ;
                              java:inVariableDeclaration ?decl .

                        ?decl src:child1 ?ty .
                      }
                      UNION
                      {
                        ?dtor a java:Resource ;
                              java:name ?vname ;
                              src:child1 ?ty .
                      }
                      UNION
                      {
                        ?dtor a java:CatchParameter ;
                              java:name ?vname ;
                              src:child1 ?ty .
                      }

                    } GROUP BY ?dtor ?vname ?ty
                  }

                  ?dtor chg:mappedTo ?dtor_ .

                  {
                    SELECT DISTINCT ?dtor_ ?vname_ ?ty_
                    WHERE {

                      {
                        ?for_ a java:EnhancedForStatement ;
                              src:child0 ?dtor_ .

                        ?dtor_ a java:ForHeader ;
                               src:child1 ?ty_ ;
                               java:name ?vname_ .
                      }
                      UNION
                      {
                        ?dtor_ a java:VariableDeclarator ;
                               java:name ?vname_ ;
                               java:inVariableDeclaration ?decl_ .

                        ?decl_ src:child1 ?ty_ .
                      }
                      UNION
                      {
                        ?dtor_ a java:Resource ;
                               java:name ?vname_ ;
                               src:child1 ?ty_ .
                      }
                      UNION
                      {
                        ?dtor_ a java:CatchParameter ;
                               java:name ?vname_ ;
                               src:child1 ?ty_ .
                      }

                    } GROUP BY ?dtor_ ?vname_ ?ty_
                  }

                } GROUP BY ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_
              }

              FILTER (EXISTS {
                ?ty a java:ReferenceType ;
                    chg:mappedTo ?ty_ .
                ?ty_ a java:ReferenceType .
                ?x src:parent+ ?ty .
                ?x_ src:parent+ ?ty_ .
                FILTER (EXISTS {
                  ?x chg:changedTo ?x_ .
                } || EXISTS {
                  ?x chg:relabeled ?x_ .
                })
              } || EXISTS {
                ?ty a java:ReferenceType ;
                    chg:mappedTo ?ty_ .
                ?x src:parent+ ?ty ;
                   chg:removal [] .
              } || EXISTS {
                ?ty_ a java:ReferenceType ;
                     ^chg:mappedTo ?ty .
                ?x_ src:parent+ ?ty_ ;
                    chg:addition [] .
              } || EXISTS {
                ?ty chg:changedTo ?ty_ .
              } || EXISTS {
                ?ty chg:relabeled ?ty_ .

              } || EXISTS {
                ?ty_ a java:ReferenceType ;
                     chg:addition [] .
                ?ty chg:mappedTo ?x_ .
                ?x_ src:parent+ ?ty_ .
              } || EXISTS {
                ?ty a java:ReferenceType ;
                    chg:removal [] .
                ?x chg:mappedTo ?ty_ ;
                   src:parent+ ?ty .
              })

            } GROUP BY ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_
          }

          OPTIONAL {
            ?v java:declaredBy ?dtor ;
               java:name ?vname ;
               chg:mappedTo ?v_ .
            ?v_ java:declaredBy ?dtor_ ;
                java:name ?vname_ .
          }

        } GROUP BY ?dtor ?dtor_ ?vname ?ty ?ty_ ?vname_ ?v ?v_
      }

      ?dtor java:inMethodOrConstructor ?meth .
      ?dtor_ java:inMethodOrConstructor ?meth_ .

      ?meth a java:MethodOrConstructor ;
            java:name ?mname ;
            java:inTypeDeclaration ?class .

      ?meth_ a java:MethodOrConstructor ;
             java:name ?mname_ ;
             java:inTypeDeclaration ?class_ .

    } GROUP BY ?dtor ?dtor_ ?vname ?meth ?ty ?ty_ ?vname_ ?meth_ ?v ?v_ ?mname ?mname_
               ?class ?class_
  }

  ?class a java:TypeDeclaration ;
         java:name ?cname .

  {
    SELECT DISTINCT ?ty ?tyname ?dims
    WHERE {
      ?ty a java:Type ;
          a ?cat OPTION (INFERENCE NONE) .
      {
        GRAPH <http://codinuum.com/ont/cpi> {
          ?cat rdfs:label ?tyname0 .
          BIND (STR(?tyname0) AS ?tyname)
        }
      }
      UNION
      {
        ?ty java:name ?tyname .
      }
      OPTIONAL {
        ?ty java:dimensions ?dims .
      }
    } GROUP BY ?ty ?tyname ?dims
  }

  {
    SELECT DISTINCT ?ty_ ?tyname_ ?dims_
    WHERE {
      ?ty_ a java:Type ;
           a ?cat_ OPTION (INFERENCE NONE) .
      {
        GRAPH <http://codinuum.com/ont/cpi> {
          ?cat_ rdfs:label ?tyname0_ .
          BIND (STR(?tyname0_) AS ?tyname_)
        }
      }
      UNION
      {
        ?ty_ java:name ?tyname_ .
      }
      OPTIONAL {
        ?ty_ java:dimensions ?dims_ .
      }
    } GROUP BY ?ty_ ?tyname_ ?dims_
  }

}
